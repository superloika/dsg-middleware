{"version":3,"sources":["webpack:///resources/js/pages/ManageAccounts/AccountsEditPassword.vue","webpack:///./resources/js/pages/ManageAccounts/AccountsEditPassword.vue?f6a2","webpack:///./resources/js/pages/ManageAccounts/AccountsEditPassword.vue","webpack:///./resources/js/pages/ManageAccounts/AccountsEditPassword.vue?399f","webpack:///./resources/js/pages/ManageAccounts/AccountsEditPassword.vue?22e0"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA,MADA,kBACA;AAAA;;AACA;AACA,sBADA;AAEA;AACA,+CADA;AAEA;AACA,wBAHA;AAIA,oBAJA;AAKA,iCALA;AAOA;AACA,yBACA;AAAA;AAAA,WADA,CADA;AAIA,qBACA;AAAA;AAAA,WADA,EAEA;AAAA,mBACA,iBACA,yCAFA;AAAA,WAFA,CAJA;AAUA,kCACA;AAAA;AAAA,WADA,EAEA;AAAA,mBACA,gCACA,qCAFA;AAAA,WAFA;AAVA;AAPA,OAFA;AA2BA,6BA3BA;AA4BA,iBA5BA;AA6BA,yBA7BA;AA8BA;AA9BA;AAgCA,GAlCA;AAoCA,WApCA;AAwCA;AACA,kBADA,4BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,4BAFA;AAAA;AAAA;AAAA;;AAGA,mBAHA,aAGA,6BAHA;AAKA,uBALA,GAKA;AACA,kCADA;AAEA,uCAFA;AAGA;AACA,2DAJA;AAKA,mDALA;AAMA;AANA,iBALA;AAAA;AAeA;AAfA;AAAA,uBAgBA,wBAhBA;;AAAA;AAgBA,wBAhBA;;AAiBA;AAEA;AACA;AACA;;AAEA;;AACA;;AACA;AACA,iBATA,MASA,IACA,4CACA,mCAFA,EAGA;AACA;AACA;AACA;AACA,sEACA;AACA;AACA,mBAHA,EAJA,CAUA;;AACA;AACA,iBAfA,MAeA,IACA,mCACA,oCAFA,EAGA;AACA;;AACA;AACA;;AA/CA;AAAA;;AAAA;AAAA;AAAA;AAiDA;;AACA;;AAlDA;AAoDA;;AApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDA;AAvDA,GAxCA;AAkGA,SAlGA,qBAkGA;AACA;AACA;AApGA,G;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,+BAA+B,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,+BAA+B,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,+BAA+B,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC,4BAA4B,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAAmG;AAC3B;AACL;;;AAGnE;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,0FAAM;AACR,EAAE,+FAAM;AACR,EAAE,wGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAA0M,CAAgB,gQAAG,EAAC,C;;;;;;;;;;;;ACA9N;AAAA;AAAA;AAAA;AAAA;AAAA","file":"40.js","sourcesContent":["<template>\r\n    <v-container>\r\n        <!-- <v-alert\r\n            dense\r\n            text\r\n            type=\"error\"\r\n            dismissible\r\n            transition=\"scale-transition\"\r\n            v-model=\"errMsgsShown\"\r\n        >\r\n            <div>\r\n                <p\r\n                    class=\"ma-0 pa-0\"\r\n                    v-for=\"(errMsg, index) in errMsgs\"\r\n                    :key=\"index\"\r\n                >\r\n                    {{ errMsg }}\r\n                </p>\r\n                <br />\r\n            </div>\r\n        </v-alert> -->\r\n\r\n        <v-form v-model=\"frmEditPw\" ref=\"form\">\r\n            <v-row>\r\n                <v-col cols=\"12\" md=\"4\" sm=\"6\">\r\n                    <v-text-field\r\n                        outlined\r\n                        dense\r\n                        text\r\n                        label=\"Old Password *\"\r\n                        required\r\n                        type=\"password\"\r\n                        v-model=\"account.old_password\"\r\n                        :rules=\"account.rules.old_password\"\r\n                        :error=\"(errorMsgs.old_password != undefined) ? true : false\"\r\n                        :error-messages=\"(errorMsgs.old_password != undefined) ? errorMsgs.old_password : []\"\r\n                    ></v-text-field>\r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" md=\"4\" sm=\"6\">\r\n                    <v-text-field\r\n                        outlined\r\n                        dense\r\n                        text\r\n                        label=\"New Password *\"\r\n                        required\r\n                        type=\"password\"\r\n                        v-model=\"account.password\"\r\n                        :rules=\"account.rules.password\"\r\n                        :error=\"(errorMsgs.password != undefined) ? true : false\"\r\n                        :error-messages=\"(errorMsgs.password != undefined) ? errorMsgs.password : []\"\r\n                    ></v-text-field>\r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" md=\"4\" sm=\"6\">\r\n                    <v-text-field\r\n                        outlined\r\n                        dense\r\n                        text\r\n                        label=\"Confirm Password *\"\r\n                        autocomplete=\"false\"\r\n                        required\r\n                        type=\"password\"\r\n                        v-model=\"account.password_confirmation\"\r\n                        :rules=\"account.rules.password_confirmation\"\r\n                    ></v-text-field>\r\n                </v-col>\r\n            </v-row>\r\n\r\n            <v-row class=\"pt-0 pb-0\" background-color=\"red\">\r\n                <v-col class=\"pt-0 pb-0\" background-color=\"red\">\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        @click=\"updatePassword()\"\r\n                        :loading=\"updatingPassword\"\r\n                        class=\"float-lg-right float-md-right float-sm-right\"\r\n                        outlinedx\r\n                        smallx\r\n                        roundedx\r\n                    >\r\n                        Update Password\r\n                    </v-btn>\r\n                </v-col>\r\n            </v-row>\r\n        </v-form>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            frmEditPw: false,\r\n            account: {\r\n                id: this.ManageAccounts.state.toEdit.id,\r\n                // old_password_hashed: this.ManageAccounts.state.toEdit.old_password_hashed,\r\n                old_password: '',\r\n                password: '',\r\n                password_confirmation: '',\r\n\r\n                rules: {\r\n                    old_password: [\r\n                        v => !!v || \"Old password is required.\",\r\n                    ],\r\n                    password: [\r\n                        v => !!v || \"Password is required.\",\r\n                        v =>\r\n                            v.length >= 5 ||\r\n                            \"Password must be 5 characters or above.\"\r\n                    ],\r\n                    password_confirmation: [\r\n                        v => !!v || \"Please confirm your password.\",\r\n                        v =>\r\n                            v === this.account.password ||\r\n                            \"Password confirmation is incorrect.\"\r\n                    ],\r\n                }\r\n            },\r\n            updatingPassword: false,\r\n            errMsgs: [],\r\n            errMsgsShown: false,\r\n            errorMsgs: {},\r\n        };\r\n    },\r\n\r\n    watch: {\r\n\r\n    },\r\n\r\n    methods: {\r\n        async updatePassword() {\r\n            // const vm = this;\r\n            if (this.$refs.form.validate()) {\r\n                let url = `${this.AppStore.state.siteUrl}accounts/update-password`;\r\n\r\n                let payload = {\r\n                    _method: \"PATCH\",\r\n                    id: this.account.id,\r\n                    // old_password_hashed: this.account.old_password_hashed,\r\n                    old_password: this.account.old_password,\r\n                    password: this.account.password,\r\n                    password_confirmation: this.account.password_confirmation,\r\n                }\r\n\r\n                try {\r\n                    this.updatingPassword = true;\r\n                    let response = await axios.post(url, payload);\r\n                    if (response.data == true) {\r\n\r\n                        if(this.$route.meta.name==='Account') {\r\n                            location.reload();\r\n                        }\r\n\r\n                        this.ManageAccounts.initUsers();\r\n                        this.ManageAccounts.state.modalEditIsOpen = false;\r\n                        this.AppStore.toast(\"Password updated\", 1500);\r\n                    } else if (\r\n                        response.data.invalidations != undefined ||\r\n                        response.data.invalidations != null\r\n                    ) {\r\n                        this.errMsgs = [];\r\n                        this.errorMsgs = {};\r\n                        this.errorMsgs = response.data.invalidations;\r\n                        Object.entries(response.data.invalidations).forEach(\r\n                            field => {\r\n                                this.errMsgs.push(field[1][0]);\r\n                            }\r\n\r\n                        );\r\n                        // this.AppStore.toast(this.errMsgs, 3000);\r\n                        this.errMsgsShown = true;\r\n                    } else if (\r\n                        response.data.errorInfo != null ||\r\n                        response.data.errorInfo != undefined\r\n                    ) {\r\n                        this.AppStore.toast(\"An error occured\", 2000);\r\n                        console.log(response.data.errorInfo);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    this.AppStore.toast(error, 3000);\r\n                }\r\n                this.updatingPassword = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        console.log('AccountsEditPassword component mounted');\r\n    }\r\n};\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-container\",\n    [\n      _c(\n        \"v-form\",\n        {\n          ref: \"form\",\n          model: {\n            value: _vm.frmEditPw,\n            callback: function($$v) {\n              _vm.frmEditPw = $$v\n            },\n            expression: \"frmEditPw\"\n          }\n        },\n        [\n          _c(\n            \"v-row\",\n            [\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"12\", md: \"4\", sm: \"6\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      outlined: \"\",\n                      dense: \"\",\n                      text: \"\",\n                      label: \"Old Password *\",\n                      required: \"\",\n                      type: \"password\",\n                      rules: _vm.account.rules.old_password,\n                      error:\n                        _vm.errorMsgs.old_password != undefined ? true : false,\n                      \"error-messages\":\n                        _vm.errorMsgs.old_password != undefined\n                          ? _vm.errorMsgs.old_password\n                          : []\n                    },\n                    model: {\n                      value: _vm.account.old_password,\n                      callback: function($$v) {\n                        _vm.$set(_vm.account, \"old_password\", $$v)\n                      },\n                      expression: \"account.old_password\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"12\", md: \"4\", sm: \"6\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      outlined: \"\",\n                      dense: \"\",\n                      text: \"\",\n                      label: \"New Password *\",\n                      required: \"\",\n                      type: \"password\",\n                      rules: _vm.account.rules.password,\n                      error: _vm.errorMsgs.password != undefined ? true : false,\n                      \"error-messages\":\n                        _vm.errorMsgs.password != undefined\n                          ? _vm.errorMsgs.password\n                          : []\n                    },\n                    model: {\n                      value: _vm.account.password,\n                      callback: function($$v) {\n                        _vm.$set(_vm.account, \"password\", $$v)\n                      },\n                      expression: \"account.password\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"12\", md: \"4\", sm: \"6\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      outlined: \"\",\n                      dense: \"\",\n                      text: \"\",\n                      label: \"Confirm Password *\",\n                      autocomplete: \"false\",\n                      required: \"\",\n                      type: \"password\",\n                      rules: _vm.account.rules.password_confirmation\n                    },\n                    model: {\n                      value: _vm.account.password_confirmation,\n                      callback: function($$v) {\n                        _vm.$set(_vm.account, \"password_confirmation\", $$v)\n                      },\n                      expression: \"account.password_confirmation\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"v-row\",\n            { staticClass: \"pt-0 pb-0\", attrs: { \"background-color\": \"red\" } },\n            [\n              _c(\n                \"v-col\",\n                {\n                  staticClass: \"pt-0 pb-0\",\n                  attrs: { \"background-color\": \"red\" }\n                },\n                [\n                  _c(\n                    \"v-btn\",\n                    {\n                      staticClass:\n                        \"float-lg-right float-md-right float-sm-right\",\n                      attrs: {\n                        color: \"primary\",\n                        loading: _vm.updatingPassword,\n                        outlinedx: \"\",\n                        smallx: \"\",\n                        roundedx: \"\"\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.updatePassword()\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                    Update Password\\n                \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./AccountsEditPassword.vue?vue&type=template&id=0f82d596&\"\nimport script from \"./AccountsEditPassword.vue?vue&type=script&lang=js&\"\nexport * from \"./AccountsEditPassword.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\DSG-MIDDLEWARE\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0f82d596')) {\n      api.createRecord('0f82d596', component.options)\n    } else {\n      api.reload('0f82d596', component.options)\n    }\n    module.hot.accept(\"./AccountsEditPassword.vue?vue&type=template&id=0f82d596&\", function () {\n      api.rerender('0f82d596', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/pages/ManageAccounts/AccountsEditPassword.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountsEditPassword.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountsEditPassword.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountsEditPassword.vue?vue&type=template&id=0f82d596&\""],"sourceRoot":""}