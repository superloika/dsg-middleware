{"version":3,"sources":["webpack:///resources/js/pages/Invoices/InvoicesUpload.vue","webpack:///./resources/js/pages/Invoices/InvoicesUpload.vue?816e","webpack:///./resources/js/pages/Invoices/InvoicesUpload.vue","webpack:///./resources/js/pages/Invoices/InvoicesUpload.vue?baea","webpack:///./resources/js/pages/Invoices/InvoicesUpload.vue?0d73"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA,wBADA;AAEA,6CAFA;AAGA;AACA;AAAA;AAAA;AADA,GAHA;AAMA,MANA,kBAMA;AACA;AACA,gBADA;AAEA,wBAFA;AAGA;AAHA;AAKA,GAZA;AAcA;AACA;AACA;AACA;AAEA,iBALA,2BAKA;AACA;AACA;AAPA,GAdA;AAwBA;AACA,UADA,oBACA;AAAA;;AACA;AAEA;AAEA;AACA;AAAA;AAAA,SADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAbA;AAgBA;;AAEA;AACA;AACA;;AAEA;AAEA;AAEA,wCACA,IADA,CACA;AACA;AACA;;AACA;;AACA;;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA,OAbA,WAcA;AACA;;AACA;AACA,OAjBA;AAkBA,KAlDA;AAoDA,uBApDA,iCAoDA;AACA;AACA;AAtDA,GAxBA;AAkFA,SAlFA,qBAkFA;AACA;AACA;AApFA,G;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,8CAA8C;AACnD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChKA;AAAA;AAAA;AAAA;AAA6F;AAC3B;AACL;;;AAG7D;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,yFAAM;AACR,EAAE,kGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAoM,CAAgB,0PAAG,EAAC,C;;;;;;;;;;;;ACAxN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"12.js","sourcesContent":["<template>\n\n<v-card\n    class=\"elevation-0 transparent pa-0\"\n>\n    <v-card-text class=\"\">\n        <v-row class=\"py-0\">\n            <v-col class=\"pb-0\" cols lg=\"9\" md=\"9\" sm=\"12\">\n\n                <v-form ref=\"frm_upload\">\n                    <v-file-input\n                        small-chips\n                        show-sizex\n                        rounded\n                        outlined\n                        dense\n                        required\n                        placeholder=\"Select text files to upload (invoices)\"\n                        v-model=\"file\"\n                        accept=\".txt\"\n                        multiple\n                        color=\"primary\"\n                        background-color=\"white\"\n                    ></v-file-input>\n                </v-form>\n            </v-col>\n\n            <!-- <v-col class=\"pb-0\" cols lg=\"3\" md=\"4\" sm=\"4\">\n                <v-select\n                    rounded\n                    outlined\n                    dense\n                    :items=\"AppStore.state.terminals\"\n                    item-text=\"name\"\n                    item-value=\"value\"\n                    placeholder=\"Select Source\"\n                    v-model=\"selected_group\"\n                    title=\"Source Terminal\"\n                ></v-select>\n            </v-col> -->\n\n            <v-col class=\"pb-0\" cols lg=\"3\" md=\"3\" sm=\"12\">\n                <v-btn\n                    dense color=\"primary\"\n                    @click=\"upload()\"\n                    block\n                    rounded\n                    :disabled=\"file==null || file.length < 1 || selected_group=='XXX'\"\n                >\n                    Upload\n                </v-btn>\n            </v-col>\n            <!-- <v-col class=\"pb-0\" cols lg=\"1\" md=\"1\" sm=\"1\">\n                <v-btn icon title=\"Previous upload summary\"\n                    @click.stop=\"showPreviousSummary()\"\n                    :disabled=\"isNoPreviousSummary\"\n                >\n                    <v-icon>mdi-history</v-icon>\n                </v-btn>\n            </v-col> -->\n        </v-row>\n\n        <!-- <v-divider></v-divider> -->\n        <div class=\"ma-0 pa-0\"></div>\n\n        <v-row class=\"py-0\">\n            <v-col>\n                <small>\n                    <strong>Important Note:</strong>\n                    Filenames should include a group keyword\n                    in order for the system to identify which group the data came from.\n                    Keyword includes\n                        <v-chip\n                            x-small :color=\"keywordsColor\"\n                            v-for=\"(group, i) in InvoicesStore.state.groups\"\n                            :key=\"i\"\n                            class=\"px-2 mr-1\"\n                        >\n                            {{ group.group_code }}\n                        </v-chip>\n                    <br>Example: \"CWDG_PCS Sept 1-5.txt\"\n                </small>\n            </v-col>\n        </v-row>\n    </v-card-text>\n\n    <v-dialog\n        v-model=\"InvoicesStore.state.isUploadSummaryShown\"\n        max-width=\"600px\"\n    >\n        <InvoiceUploadSummary :uploadResponse=\"uploadResponse\"></InvoiceUploadSummary>\n    </v-dialog>\n\n</v-card>\n\n</template>\n\n\n<script>\n\nexport default {\n    name: 'InvoicesUpload',\n    props: ['searchKey', 'principalCodeFilter'],\n    components: {\n        InvoiceUploadSummary: () => import('./InvoiceUploadSummary.vue')\n    },\n    data() {\n        return {\n            file: null,\n            selected_group: '',\n            uploadResponse: {},\n        }\n    },\n\n    computed: {\n        // isNoPreviousSummary() {\n        //     return Object.keys(this.uploadResponse).length === 0;\n        // },\n\n        keywordsColor() {\n            return 'secondary';\n        }\n    },\n\n    methods: {\n        upload() {\n            let vm = this;\n\n            this.AppStore.overlay(true);\n\n            const config = {\n                headers: {'content-type': 'multipart/form-data'},\n                // onUploadProgress: progressEvent => {\n                //     let progressPercentage = progressEvent.loaded / vm.file.size * 100;\n                //     let statusText = 'Uploading...';\n                //     if(progressPercentage < 100) {\n                //         statusText = 'Uploading... ' + progressPercentage.toFixed(0) + '%';\n                //     } else if(progressPercentage == 100) {\n                //         statusText = 'File uploaded';\n                //     } else if(progressPercentage > 100){\n                //         statusText = 'Saving...';\n                //     }\n                //     this.AppStore.state.overlay.msg = statusText;\n                // }\n            }\n\n            let formData = new FormData();\n\n            for(let i=0;i<this.file.length;i++) {\n                formData.append('files[' + i + ']', this.file[i]);\n            }\n\n            formData.append('terminal', this.selected_group);\n\n            let url = this.AppStore.state.siteUrl + 'invoices/upload';\n\n            axios.post(url, formData, config)\n                .then(response => {\n                    const success = response.data.success;\n                    const message = response.data.message;\n                    this.AppStore.overlay(false);\n                    this.AppStore.toast(message);\n                    this.file = null;\n                    this.selected_group = '';\n                    this.InvoicesStore.initInvoices(this.searchKey, this.principalCodeFilter);\n                    this.uploadResponse = response.data;\n                    if(response.data.success) {\n                        this.InvoicesStore.state.isUploadSummaryShown = true;\n                    }\n                })\n                .catch(error => {\n                    this.AppStore.overlay(false);\n                    this.AppStore.toast(error);\n                });\n        },\n\n        showPreviousSummary() {\n            this.InvoicesStore.state.isUploadSummaryShown = true;\n        }\n\n    },\n\n    mounted() {\n        console.log('InvoicesUpload mounted.');\n    }\n}\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-card\",\n    { staticClass: \"elevation-0 transparent pa-0\" },\n    [\n      _c(\n        \"v-card-text\",\n        {},\n        [\n          _c(\n            \"v-row\",\n            { staticClass: \"py-0\" },\n            [\n              _c(\n                \"v-col\",\n                {\n                  staticClass: \"pb-0\",\n                  attrs: { cols: \"\", lg: \"9\", md: \"9\", sm: \"12\" }\n                },\n                [\n                  _c(\n                    \"v-form\",\n                    { ref: \"frm_upload\" },\n                    [\n                      _c(\"v-file-input\", {\n                        attrs: {\n                          \"small-chips\": \"\",\n                          \"show-sizex\": \"\",\n                          rounded: \"\",\n                          outlined: \"\",\n                          dense: \"\",\n                          required: \"\",\n                          placeholder: \"Select text files to upload (invoices)\",\n                          accept: \".txt\",\n                          multiple: \"\",\n                          color: \"primary\",\n                          \"background-color\": \"white\"\n                        },\n                        model: {\n                          value: _vm.file,\n                          callback: function($$v) {\n                            _vm.file = $$v\n                          },\n                          expression: \"file\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-col\",\n                {\n                  staticClass: \"pb-0\",\n                  attrs: { cols: \"\", lg: \"3\", md: \"3\", sm: \"12\" }\n                },\n                [\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: {\n                        dense: \"\",\n                        color: \"primary\",\n                        block: \"\",\n                        rounded: \"\",\n                        disabled:\n                          _vm.file == null ||\n                          _vm.file.length < 1 ||\n                          _vm.selected_group == \"XXX\"\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.upload()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n                    Upload\\n                \")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"ma-0 pa-0\" }),\n          _vm._v(\" \"),\n          _c(\n            \"v-row\",\n            { staticClass: \"py-0\" },\n            [\n              _c(\"v-col\", [\n                _c(\n                  \"small\",\n                  [\n                    _c(\"strong\", [_vm._v(\"Important Note:\")]),\n                    _vm._v(\n                      \"\\n                    Filenames should include a group keyword\\n                    in order for the system to identify which group the data came from.\\n                    Keyword includes\\n                        \"\n                    ),\n                    _vm._l(_vm.InvoicesStore.state.groups, function(group, i) {\n                      return _c(\n                        \"v-chip\",\n                        {\n                          key: i,\n                          staticClass: \"px-2 mr-1\",\n                          attrs: { \"x-small\": \"\", color: _vm.keywordsColor }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(group.group_code) +\n                              \"\\n                        \"\n                          )\n                        ]\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"br\"),\n                    _vm._v('Example: \"CWDG_PCS Sept 1-5.txt\"\\n                ')\n                  ],\n                  2\n                )\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"v-dialog\",\n        {\n          attrs: { \"max-width\": \"600px\" },\n          model: {\n            value: _vm.InvoicesStore.state.isUploadSummaryShown,\n            callback: function($$v) {\n              _vm.$set(_vm.InvoicesStore.state, \"isUploadSummaryShown\", $$v)\n            },\n            expression: \"InvoicesStore.state.isUploadSummaryShown\"\n          }\n        },\n        [\n          _c(\"InvoiceUploadSummary\", {\n            attrs: { uploadResponse: _vm.uploadResponse }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./InvoicesUpload.vue?vue&type=template&id=79987d77&\"\nimport script from \"./InvoicesUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./InvoicesUpload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\DSGPM_DEV\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('79987d77')) {\n      api.createRecord('79987d77', component.options)\n    } else {\n      api.reload('79987d77', component.options)\n    }\n    module.hot.accept(\"./InvoicesUpload.vue?vue&type=template&id=79987d77&\", function () {\n      api.rerender('79987d77', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/pages/Invoices/InvoicesUpload.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InvoicesUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InvoicesUpload.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InvoicesUpload.vue?vue&type=template&id=79987d77&\""],"sourceRoot":""}