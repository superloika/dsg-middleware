{"version":3,"sources":["webpack:///resources/js/pages/ManageAccounts/AccountsAdd.vue","webpack:///./resources/js/pages/ManageAccounts/AccountsAdd.vue?e0ef","webpack:///./resources/js/pages/ManageAccounts/AccountsAdd.vue","webpack:///./resources/js/pages/ManageAccounts/AccountsAdd.vue?130c","webpack:///./resources/js/pages/ManageAccounts/AccountsAdd.vue?313f"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA,MADA,kBACA;AAAA;;AACA;AACA,gCADA;AAEA,qCAFA;AAGA,oBAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA,gBAPA;AAQA,oBARA;AASA,oBATA;AAUA,2BAVA;AAWA,qBAXA;AAYA,+BAZA;AAcA;AACA,iBACA;AAAA;AAAA,WADA,EAEA;AAAA,mBACA,iBACA,oCAFA;AAAA,WAFA,EAKA;AAAA;AAAA,WALA,CADA;AAQA,qBACA;AAAA;AAAA,WADA,EAEA;AAAA,mBACA,iBACA,wCAFA;AAAA,WAFA,EAKA;AAAA;AAAA,WALA,CARA;AAeA,qBACA;AAAA;AAAA,WADA,EAEA;AAAA,mBACA,iBACA,wCAFA;AAAA,WAFA,CAfA;AAqBA,4BACA;AAAA;AAAA,WADA,EAEA;AAAA,mBACA,8BACA,gCADA,IAEA,wBAHA;AAAA,WAFA,CArBA;AA4BA;AAAA;AAAA;AA5BA;AAdA,OAJA;AAiDA,0BAjDA;AAkDA,iBAlDA;AAmDA;AAnDA;AAsDA,GAxDA;AA0DA;AACA;AACA;AACA,KAHA;AAKA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAXA,CAaA;AACA;AACA;;AAfA,GA1DA;AA4EA;AACA,eADA,yBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBADA,GACA,MADA;;AAAA,qBAEA,+BAFA;AAAA;AAAA;AAAA;;AAGA,mBAHA,aAGA,6BAHA;AAAA;AAKA;AALA;AAAA,uBAMA;AACA,0CADA;AAEA,kDAFA;AAGA,kDAHA;AAIA,oDAJA;AAKA;AALA,kBANA;;AAAA;AAMA,wBANA;;AAaA;AACA;AACA;;AACA;;AACA;AACA,iBAJA,MAIA,IACA,4CACA,mCAFA,EAGA;AACA;AACA,sEACA;AACA;AACA,mBAHA,EAFA,CAOA;;AACA;AACA,iBAZA,MAYA,IACA,mCACA,oCAFA,EAGA;AACA;;AACA;AACA;;AApCA;AAAA;;AAAA;AAAA;AAAA;AAsCA;;AACA;;AAvCA;AAyCA;;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AA5CA,GA5EA;AA2HA,cA3HA;AA6HA,SA7HA,qBA6HA,EA7HA;AA+HA,SA/HA,qBA+HA;AACA;AACA;AAjIA,G;;;;;;;;;;;;AC7IA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,SAAS,eAAe,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,8BAA8B,uCAAuC;AACrE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3TA;AAAA;AAAA;AAAA;AAA0F;AAC3B;AACL;;;AAG1D;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,sFAAM;AACR,EAAE,+FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAiM,CAAgB,uPAAG,EAAC,C;;;;;;;;;;;;ACArN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"24.js","sourcesContent":["<template>\r\n    <v-card outlined>\r\n        <v-card-title>\r\n            <v-icon>mdi-account-plus</v-icon>\r\n            <span class=\"ml-2\">Add Account</span>\r\n            <v-spacer></v-spacer>\r\n            <v-btn icon @click=\"ManageAccounts.state.modalAddIsOpen = false\">\r\n                <v-icon>mdi-close-box-outline</v-icon>\r\n            </v-btn>\r\n        </v-card-title>\r\n        <v-card-text>\r\n            <v-alert\r\n                dense\r\n                text\r\n                type=\"error\"\r\n                dismissible\r\n                transition=\"scale-transition\"\r\n                v-model=\"errMsgsShown\"\r\n            >\r\n                <p\r\n                    class=\"ma-0 pa-0\"\r\n                    v-for=\"(errMsg, index) in errMsgs\"\r\n                    :key=\"index\"\r\n                >\r\n                    {{ errMsg }}\r\n                </p>\r\n            </v-alert>\r\n            <br />\r\n\r\n            <v-form v-model=\"frm_add\" ref=\"frm_add\">\r\n                <v-row class=\"pa-0\">\r\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" class=\"pt-1 pb-1\">\r\n                        <v-text-field\r\n                            outlined\r\n                            dense\r\n                            text\r\n                            label=\"Name *\"\r\n                            required\r\n                            v-model=\"newAccount.name\"\r\n                            :rules=\"newAccount.rules.name\"\r\n                        ></v-text-field>\r\n                    </v-col>\r\n\r\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" class=\"pt-1 pb-1\">\r\n                        <v-text-field\r\n                            outlined\r\n                            dense\r\n                            text\r\n                            label=\"Username *\"\r\n                            required\r\n                            v-model=\"newAccount.username\"\r\n                            :rules=\"newAccount.rules.username\"\r\n                        ></v-text-field>\r\n                    </v-col>\r\n\r\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" class=\"pt-1 pb-1\">\r\n                        <v-select\r\n                            :items=\"AppStore.state.userTypes\"\r\n                            outlined\r\n                            dense\r\n                            text\r\n                            label=\"User Type *\"\r\n                            required\r\n                            v-model=\"newAccount.user_type\"\r\n                            :rules=\"newAccount.rules.user_type\"\r\n                        >\r\n                        </v-select>\r\n                    </v-col>\r\n\r\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" class=\"pt-1 pb-1\">\r\n                        <v-text-field\r\n                            outlined\r\n                            dense\r\n                            text\r\n                            label=\"Password *\"\r\n                            autocomplete=\"false\"\r\n                            required\r\n                            type=\"password\"\r\n                            v-model=\"newAccount.password\"\r\n                            :rules=\"newAccount.rules.password\"\r\n                        ></v-text-field>\r\n                    </v-col>\r\n\r\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" class=\"pt-1 pb-1\">\r\n                        <v-text-field\r\n                            outlined\r\n                            dense\r\n                            text\r\n                            label=\"Confirm Password *\"\r\n                            autocomplete=\"false\"\r\n                            required\r\n                            type=\"password\"\r\n                            v-model=\"newAccount.passwordConfirm\"\r\n                            :rules=\"newAccount.rules.passwordConfirm\"\r\n                        ></v-text-field>\r\n                    </v-col>\r\n\r\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" class=\"pt-1 pb-1\"\r\n                        v-if=\"newAccount.user_type==='user'\">\r\n                        <v-select\r\n                            v-model=\"newAccount.selected_principals\"\r\n                            :items=\"AppStore.state.principals\"\r\n                            item-text=\"name\"\r\n                            item-value=\"id\"\r\n                            label=\"Designated Principals\"\r\n                            multiple\r\n                            dense\r\n                            outlined\r\n                        ></v-select>\r\n                    </v-col>\r\n                </v-row>\r\n\r\n                <v-row class=\"pa-0\">\r\n                    <v-col>\r\n                        <div class=\"float-right\">\r\n                            <v-btn\r\n                                class=\"\"\r\n                                color=\"primary\"\r\n                                dense\r\n                                smallx\r\n                                outlinedx\r\n                                @click=\"saveNewUser()\"\r\n                                :loading=\"savingNewUser\"\r\n                                roundedx\r\n                            >\r\n                                Save\r\n                            </v-btn>\r\n                        </div>\r\n                    </v-col>\r\n                </v-row>\r\n\r\n            </v-form>\r\n        </v-card-text>\r\n\r\n        <!-- <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n        </v-card-actions> -->\r\n    </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            nameRegex: /^[a-zA-Z\\s]+$/,\r\n            usernameRegex: /^[a-zA-Z0-9]+$/,\r\n            frm_add: false,\r\n            newAccount: {\r\n                // name: \"test user\",\r\n                // username: \"admin\",\r\n                // password: \"admin\",\r\n                // passwordConfirm: \"admin\",\r\n                // user_type: \"user\",\r\n\r\n                name: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n                passwordConfirm: \"\",\r\n                user_type: \"\",\r\n                selected_principals: [],\r\n\r\n                rules: {\r\n                    name: [\r\n                        v => !!v || \"Name is required\",\r\n                        v =>\r\n                            v.length >= 8 ||\r\n                            \"Name must be 8 characters or above\",\r\n                        v => this.nameRegex.test(v) || \"Invalid name. Use alpha characters only\"\r\n                    ],\r\n                    username: [\r\n                        v => !!v || \"Username is required\",\r\n                        v =>\r\n                            v.length >= 5 ||\r\n                            \"Username must be 5 characters or above\",\r\n                        v => this.usernameRegex.test(v) || \"Invalid username\"\r\n                    ],\r\n                    password: [\r\n                        v => !!v || \"Password is required\",\r\n                        v =>\r\n                            v.length >= 5 ||\r\n                            \"Password must be 5 characters or above\"\r\n                    ],\r\n                    passwordConfirm: [\r\n                        v => !!v || \"Please confirm password\",\r\n                        v =>\r\n                            this.newAccount.password ===\r\n                                this.newAccount.passwordConfirm ||\r\n                            \"Password did not match\"\r\n                    ],\r\n                    user_type: [v => !!v || \"User type is required\"]\r\n                }\r\n            },\r\n            savingNewUser: false,\r\n            errMsgs: [],\r\n            errMsgsShown: false,\r\n\r\n        };\r\n    },\r\n\r\n    watch: {\r\n        'newAccount.name': function() {\r\n            this.newAccount.name = this.newAccount.name.replace('  ',' ').trim();\r\n        },\r\n\r\n        'newAccount.user_type': function() {\r\n            if (this.newAccount.user_type === 'super_admin') {\r\n                this.newAccount.selected_principals = [\"*\"];\r\n            } else {\r\n                this.newAccount.selected_principals = [];\r\n            }\r\n        },\r\n\r\n        // 'newAccount.selected_principals': function() {\r\n        //     console.log(this.newAccount.selected_principals);\r\n        // }\r\n    },\r\n\r\n    methods: {\r\n        async saveNewUser() {\r\n            const vm = this;\r\n            if (this.$refs.frm_add.validate()) {\r\n                let url = `${this.AppStore.state.siteUrl}accounts`;\r\n                try {\r\n                    this.savingNewUser = true;\r\n                    let response = await axios.post(url, {\r\n                        name: vm.newAccount.name,\r\n                        username: vm.newAccount.username,\r\n                        password: vm.newAccount.password,\r\n                        user_type: vm.newAccount.user_type,\r\n                        selected_principals: vm.newAccount.selected_principals,\r\n                    });\r\n                    // console.log(response.data);\r\n                    if (response.data == true) {\r\n                        this.ManageAccounts.initUsers();\r\n                        this.ManageAccounts.state.modalAddIsOpen = false;\r\n                        this.AppStore.toast(\"New account added\", 2000);\r\n                    } else if (\r\n                        response.data.invalidations != undefined ||\r\n                        response.data.invalidations != null\r\n                    ) {\r\n                        this.errMsgs = [];\r\n                        Object.entries(response.data.invalidations).forEach(\r\n                            field => {\r\n                                this.errMsgs.push(field[1][0]);\r\n                            }\r\n                        );\r\n                        // this.AppStore.toast(this.errMsgs, 3000);\r\n                        this.errMsgsShown = true;\r\n                    } else if (\r\n                        response.data.errorInfo != null ||\r\n                        response.data.errorInfo != undefined\r\n                    ) {\r\n                        this.AppStore.toast(\"An error occured\", 2000);\r\n                        console.log(response.data.errorInfo);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    this.AppStore.toast(error, 3000);\r\n                }\r\n                this.savingNewUser = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    computed: {},\r\n\r\n    created() {},\r\n\r\n    mounted() {\r\n        console.log(\"ExpendituresAdd mounted.\");\r\n    }\r\n};\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-card\",\n    { attrs: { outlined: \"\" } },\n    [\n      _c(\n        \"v-card-title\",\n        [\n          _c(\"v-icon\", [_vm._v(\"mdi-account-plus\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { staticClass: \"ml-2\" }, [_vm._v(\"Add Account\")]),\n          _vm._v(\" \"),\n          _c(\"v-spacer\"),\n          _vm._v(\" \"),\n          _c(\n            \"v-btn\",\n            {\n              attrs: { icon: \"\" },\n              on: {\n                click: function($event) {\n                  _vm.ManageAccounts.state.modalAddIsOpen = false\n                }\n              }\n            },\n            [_c(\"v-icon\", [_vm._v(\"mdi-close-box-outline\")])],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"v-card-text\",\n        [\n          _c(\n            \"v-alert\",\n            {\n              attrs: {\n                dense: \"\",\n                text: \"\",\n                type: \"error\",\n                dismissible: \"\",\n                transition: \"scale-transition\"\n              },\n              model: {\n                value: _vm.errMsgsShown,\n                callback: function($$v) {\n                  _vm.errMsgsShown = $$v\n                },\n                expression: \"errMsgsShown\"\n              }\n            },\n            _vm._l(_vm.errMsgs, function(errMsg, index) {\n              return _c(\"p\", { key: index, staticClass: \"ma-0 pa-0\" }, [\n                _vm._v(\"\\n                \" + _vm._s(errMsg) + \"\\n            \")\n              ])\n            }),\n            0\n          ),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\n            \"v-form\",\n            {\n              ref: \"frm_add\",\n              model: {\n                value: _vm.frm_add,\n                callback: function($$v) {\n                  _vm.frm_add = $$v\n                },\n                expression: \"frm_add\"\n              }\n            },\n            [\n              _c(\n                \"v-row\",\n                { staticClass: \"pa-0\" },\n                [\n                  _c(\n                    \"v-col\",\n                    {\n                      staticClass: \"pt-1 pb-1\",\n                      attrs: { cols: \"12\", md: \"4\", sm: \"6\" }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          outlined: \"\",\n                          dense: \"\",\n                          text: \"\",\n                          label: \"Name *\",\n                          required: \"\",\n                          rules: _vm.newAccount.rules.name\n                        },\n                        model: {\n                          value: _vm.newAccount.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.newAccount, \"name\", $$v)\n                          },\n                          expression: \"newAccount.name\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-col\",\n                    {\n                      staticClass: \"pt-1 pb-1\",\n                      attrs: { cols: \"12\", md: \"4\", sm: \"6\" }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          outlined: \"\",\n                          dense: \"\",\n                          text: \"\",\n                          label: \"Username *\",\n                          required: \"\",\n                          rules: _vm.newAccount.rules.username\n                        },\n                        model: {\n                          value: _vm.newAccount.username,\n                          callback: function($$v) {\n                            _vm.$set(_vm.newAccount, \"username\", $$v)\n                          },\n                          expression: \"newAccount.username\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-col\",\n                    {\n                      staticClass: \"pt-1 pb-1\",\n                      attrs: { cols: \"12\", md: \"4\", sm: \"6\" }\n                    },\n                    [\n                      _c(\"v-select\", {\n                        attrs: {\n                          items: _vm.AppStore.state.userTypes,\n                          outlined: \"\",\n                          dense: \"\",\n                          text: \"\",\n                          label: \"User Type *\",\n                          required: \"\",\n                          rules: _vm.newAccount.rules.user_type\n                        },\n                        model: {\n                          value: _vm.newAccount.user_type,\n                          callback: function($$v) {\n                            _vm.$set(_vm.newAccount, \"user_type\", $$v)\n                          },\n                          expression: \"newAccount.user_type\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-col\",\n                    {\n                      staticClass: \"pt-1 pb-1\",\n                      attrs: { cols: \"12\", md: \"4\", sm: \"6\" }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          outlined: \"\",\n                          dense: \"\",\n                          text: \"\",\n                          label: \"Password *\",\n                          autocomplete: \"false\",\n                          required: \"\",\n                          type: \"password\",\n                          rules: _vm.newAccount.rules.password\n                        },\n                        model: {\n                          value: _vm.newAccount.password,\n                          callback: function($$v) {\n                            _vm.$set(_vm.newAccount, \"password\", $$v)\n                          },\n                          expression: \"newAccount.password\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-col\",\n                    {\n                      staticClass: \"pt-1 pb-1\",\n                      attrs: { cols: \"12\", md: \"4\", sm: \"6\" }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          outlined: \"\",\n                          dense: \"\",\n                          text: \"\",\n                          label: \"Confirm Password *\",\n                          autocomplete: \"false\",\n                          required: \"\",\n                          type: \"password\",\n                          rules: _vm.newAccount.rules.passwordConfirm\n                        },\n                        model: {\n                          value: _vm.newAccount.passwordConfirm,\n                          callback: function($$v) {\n                            _vm.$set(_vm.newAccount, \"passwordConfirm\", $$v)\n                          },\n                          expression: \"newAccount.passwordConfirm\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _vm.newAccount.user_type === \"user\"\n                    ? _c(\n                        \"v-col\",\n                        {\n                          staticClass: \"pt-1 pb-1\",\n                          attrs: { cols: \"12\", md: \"4\", sm: \"6\" }\n                        },\n                        [\n                          _c(\"v-select\", {\n                            attrs: {\n                              items: _vm.AppStore.state.principals,\n                              \"item-text\": \"name\",\n                              \"item-value\": \"id\",\n                              label: \"Designated Principals\",\n                              multiple: \"\",\n                              dense: \"\",\n                              outlined: \"\"\n                            },\n                            model: {\n                              value: _vm.newAccount.selected_principals,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.newAccount,\n                                  \"selected_principals\",\n                                  $$v\n                                )\n                              },\n                              expression: \"newAccount.selected_principals\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-row\",\n                { staticClass: \"pa-0\" },\n                [\n                  _c(\"v-col\", [\n                    _c(\n                      \"div\",\n                      { staticClass: \"float-right\" },\n                      [\n                        _c(\n                          \"v-btn\",\n                          {\n                            attrs: {\n                              color: \"primary\",\n                              dense: \"\",\n                              smallx: \"\",\n                              outlinedx: \"\",\n                              loading: _vm.savingNewUser,\n                              roundedx: \"\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.saveNewUser()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            Save\\n                        \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./AccountsAdd.vue?vue&type=template&id=1f6d23e0&\"\nimport script from \"./AccountsAdd.vue?vue&type=script&lang=js&\"\nexport * from \"./AccountsAdd.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\KALOY\\\\PROJECTS\\\\DSG\\\\DSG_DEV\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1f6d23e0')) {\n      api.createRecord('1f6d23e0', component.options)\n    } else {\n      api.reload('1f6d23e0', component.options)\n    }\n    module.hot.accept(\"./AccountsAdd.vue?vue&type=template&id=1f6d23e0&\", function () {\n      api.rerender('1f6d23e0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/pages/ManageAccounts/AccountsAdd.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountsAdd.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountsAdd.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountsAdd.vue?vue&type=template&id=1f6d23e0&\""],"sourceRoot":""}