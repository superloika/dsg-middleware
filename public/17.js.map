{"version":3,"sources":["webpack:///resources/js/pages/Principals/common/BRUpload.vue","webpack:///./resources/js/pages/Principals/common/BRUpload.vue?5786","webpack:///./resources/js/pages/Principals/common/BRUpload.vue","webpack:///./resources/js/pages/Principals/common/BRUpload.vue?f036","webpack:///./resources/js/pages/Principals/common/BRUpload.vue?cd35"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA,MADA,kBACA;AACA;AACA,eADA;AAEA,uBAFA;AAGA;AAHA;AAKA,GAPA;AASA;AACA,aADA,uBACA;AACA,cACA;AACA,yBADA;AAEA;AAFA,OADA,EAKA;AACA,+BADA;AAEA;AAFA,OALA,EASA;AACA,uBADA;AAEA;AAFA,OATA,EAaA;AACA,8BADA;AAEA;AAFA,OAbA,EAiBA;AACA,wBADA;AAEA;AAFA,OAjBA,EAqBA;AACA,wBADA;AAEA;AAFA,OArBA,EAyBA;AACA,sBADA;AAEA;AAFA,OAzBA;AA8BA,KAhCA;AAiCA,WAjCA,qBAiCA;AACA;AACA,KAnCA;AAoCA,kBApCA,4BAoCA;AACA;AAAA;AAAA;AACA,KAtCA;AAuCA,kBAvCA,4BAuCA;AACA;AAAA;AAAA;AACA,KAzCA;AA0CA,iBA1CA,2BA0CA;AACA;AACA;AA5CA,GATA;AAwDA;AACA,UADA,oBACA;AAAA;;AACA;AACA,4CACA,yEADA,GAEA,+DAFA;;AAGA;AACA;;AADA,qCAEA,CAFA;AAGA;AACA;AACA;;AACA,sEACA,IADA,CACA;AACA;AACA;AACA,oEACA,IADA,CACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,qBANA,MAMA;AACA;AACA;AACA,mBAXA;AAYA,iBAdA,MAcA;AACA;AACA;AACA,eAnBA;AAoBA;AA1BA;;AAEA;AAAA;AAyBA;AACA;AACA;AACA,KApCA;AAsCA,aAtCA,uBAsCA,CAEA,CAxCA;AA0CA,UA1CA,oBA0CA;AACA;AACA;AACA;AACA;AACA,wDACA,IADA,EACA,sCADA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AAxDA,GAxDA;AAmHA,SAnHA,qBAmHA,CAEA,CArHA;AAuHA,SAvHA,qBAuHA;AACA;AACA,0CAFA,CAIA;AACA;AACA;AACA;AACA;AA/HA,G;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,iBAAiB,EAAE;AACrC;AACA;AACA;AACA;AACA,4BAA4B,SAAS,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,mBAAmB;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,sBAAsB,EAAE;AAClD;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB;AACvD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,0CAA0C,SAAS;AACnD;AACA;AACA,2BAA2B,iDAAiD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8CAA8C,SAAS,mBAAmB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS,iBAAiB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,sBAAsB,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA,6BAA6B,SAAS,YAAY,EAAE;AACpD;AACA;AACA;AACA,iCAAiC,SAAS,8BAA8B,EAAE;AAC1E;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7bA;AAAA;AAAA;AAAA;AAAuF;AAC3B;AACL;;;AAGvD;AACmG;AACnG,gBAAgB,2GAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAoM,CAAgB,oPAAG,EAAC,C;;;;;;;;;;;;ACAxN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"17.js","sourcesContent":["<template>\n    <v-card>\n        <v-toolbar elevation=\"0\">\n            <v-toolbar-title>\n                <v-icon color=\"primary\">mdi-cloud-upload</v-icon>\n                BeatRoute Upload\n            </v-toolbar-title>\n            <v-spacer></v-spacer>\n            <v-btn\n                color=\"primary\"\n                rounded dense depressed\n                @click=\"upload\"\n                class=\"ml-2\"\n                :disabled=\"\n                    !batches.length\n                    || stillUploading\n                    || !enableReupload && uploadAttempts > 0\n                \"\n            >\n                {{ enableReupload ? 'Reupload failed batch(es)' : 'Upload' }}\n            </v-btn>\n            <v-btn\n                @click.stop=\"cancel\"\n                rounded dense depressed\n                class=\"ml-2\"\n                :disabled=\"stillUploading\"\n            >\n                Close\n            </v-btn>\n        </v-toolbar>\n\n        <v-card-text class=\"pt-2\">\n            <!-- <v-row>\n\n            </v-row> -->\n            <v-row>\n                <v-col cols=\"12\" md=\"3\">\n                    <v-tabs v-model=\"tab\" vertical grow>\n                        <v-tab\n                            v-for=\"(b,i) in batches\"\n                            :key=\"i\"\n                        >\n                            <div class=\"px-2 font-weight-bold text-left\">\n                                Batch {{ i+1 }} of {{ batches.length }}\n                                <v-progress-circular\n                                    v-if=\"batchUploadStates[i]=='uploading'\"\n                                    indeterminate dark\n                                    :size=\"20\"\n                                ></v-progress-circular>\n                                <v-icon color=\"success\" v-else-if=\"batchUploadStates[i]=='success'\">\n                                    mdi-check-circle\n                                </v-icon>\n                                <v-icon color=\"error\" v-else-if=\"batchUploadStates[i]=='failed'\">\n                                    mdi-alert\n                                </v-icon>\n                            </div>\n                        </v-tab>\n                    </v-tabs>\n                </v-col>\n\n                <v-col cols=\"12\" md=\"9\">\n                    <v-tabs-items v-model=\"tab\">\n                        <v-tab-item\n                            v-for=\"(b,batchIndex) in batches\"\n                            :key=\"batchIndex\"\n                        >\n                            <v-container fluid>\n                                <v-expansion-panels focusable multiple>\n                                    <v-expansion-panel\n                                        v-for=\"(invoice,i) in b\"\n                                        :key=\"i\"\n                                    >\n                                        <v-expansion-panel-header>\n                                            <div\n                                                class=\"text-caption font-weight-boldx\"\n                                                :class=\"invoice.upload_status.success == true ?\n                                                    'primary--text'\n                                                    : invoice.upload_status.success == false ?\n                                                    'error--text'\n                                                    : ''\n                                                \"\n                                            >\n                                                {{ i+1 }}. Invoice {{ invoice.erp_invoice_number }}\n                                                (<em>{{ invoice.details.length }} item/s</em>)\n\n                                                <span v-if=\"invoice.upload_status.success==false\"\n                                                    class=\"font-weight-bold\"\n                                                >\n                                                    | Error:\n                                                    {{ invoice.upload_status.message }}\n                                                    ({{ invoice.upload_status.value }})\n                                                </span>\n\n                                                <span v-if=\"invoice.upload_status.success==true\"\n                                                    class=\"font-weight-bold\"\n                                                >\n                                                    | {{ invoice.upload_status.message }}\n                                                </span>\n                                            </div>\n                                        </v-expansion-panel-header>\n                                        <v-expansion-panel-content class=\"pt-4\">\n                                            <div class=\"d-flex pb-4\">\n                                                <div class=\"pr-4\">\n                                                    Invoice #: <b>{{ invoice.erp_invoice_number }}</b>\n                                                </div>\n                                                <div class=\"pr-4\">Customer: <b>{{ invoice.customer_name }}</b></div>\n                                                <div class=\"pr-4\">Amount: <b>{{ invoice.total_value.toFixed(4) }}</b></div>\n                                            </div>\n                                            <div>\n                                                <v-data-table\n                                                    dense\n                                                    :headers=\"tblHeader\"\n                                                    :items=\"invoice.details\"\n                                                >\n                                                    <template v-slot:[`item.price_per_item`] = \"{item}\">\n                                                        <div class=\"text-right\">\n                                                            {{ item.price_per_item }}\n                                                        </div>\n                                                    </template>\n                                                    <template v-slot:[`item.discount_value`] = \"{item}\">\n                                                        <div class=\"text-right\">\n                                                            {{ item.discount_value.toFixed(4) }}\n                                                        </div>\n                                                    </template>\n                                                    <template v-slot:[`item.gross_value`] = \"{item}\">\n                                                        <div class=\"text-right\">\n                                                            {{ item.gross_value.toFixed(4) }}\n                                                        </div>\n                                                    </template>\n                                                </v-data-table>\n                                            </div>\n                                        </v-expansion-panel-content>\n                                    </v-expansion-panel>\n                                </v-expansion-panels>\n                            </v-container>\n                        </v-tab-item>\n                    </v-tabs-items>\n                </v-col>\n            </v-row>\n        </v-card-text>\n    </v-card>\n</template>\n\n\n<script>\nexport default {\n    data() {\n        return {\n            tab: null,\n            uploadAttempts: 0,\n            batchUploadStates: [],\n        }\n    },\n\n    computed: {\n        tblHeader() {\n            return [\n                {\n                    text: 'Item Name',\n                    value: 'item_name'\n                },\n                {\n                    text: 'SKU External ID',\n                    value: 'sku_external_id'\n                },\n                {\n                    text: 'SKU UOM',\n                    value: 'sku_uom'\n                },\n                {\n                    text: 'Price per Item',\n                    value: 'price_per_item'\n                },\n                {\n                    text: 'Quantity',\n                    value: 'quantity'\n                },\n                {\n                    text: 'Discount',\n                    value: 'discount_value'\n                },\n                {\n                    text: 'Amount',\n                    value: 'gross_value'\n                },\n            ];\n        },\n        batches() {\n            return this.BrStore.state.currentGeneratedBatches;\n        },\n        stillUploading() {\n            return this.batchUploadStates.find(e => e == 'uploading') != undefined;\n        },\n        enableReupload() {\n            return this.batchUploadStates.find(e => e == 'failed') != undefined;\n        },\n        bussinessUnit() {\n            return this[this.PrincipalsStore.state.selectedPrincipalCode].state.bu;\n        }\n    },\n\n    methods: {\n        upload() {\n            if(this.batches) {\n                const confMsg = this.enableReupload ?\n                    'This action will reupload the failed batch(es) to the BeatRoute backend' :\n                    'This action will upload the invoices to the BeatRoute backend';\n                if(confirm(confMsg)) {\n                    this.uploadAttempts++;\n                    for(let i=0; i < this.batches.length; i++) {\n                        if(this.batchUploadStates[i] == undefined || this.batchUploadStates[i] == 'failed') {\n                            Vue.set(this.batchUploadStates,i,'uploading');\n                            const batch = this.batches[i];\n                            this.BrStore.invoiceCreate(this.bussinessUnit, batch)\n                                .then(res => {\n                                    if(res.success) {\n                                        // set status as 'uploaded'\n                                        this.InvoicesStore.setInvoicesUploaded(res.data)\n                                            .then(response => {\n                                                if(response.success) {\n                                                    Vue.set(this.batchUploadStates,i,'success');\n                                                    const batchLen = batch.length;\n                                                    for(let j=0; j < batchLen; j++) {\n                                                        batch[j].upload_status = response.batch[j];\n                                                    }\n                                                } else {\n                                                    Vue.set(this.batchUploadStates,i,'failed');\n                                                }\n                                            });\n                                    } else {\n                                        Vue.set(this.batchUploadStates,i,'failed');\n                                    }\n                                });\n                        }\n                    }\n                }\n            }\n        },\n\n        rePrepare() {\n\n        },\n\n        cancel() {\n            if(confirm('Are you sure you want to close this window?')) {\n                // regenerate templated data if upload states has been modified\n                if(this.batchUploadStates[0]) {\n                    this.batchUploadStates = [];\n                    this.PrincipalsStore.initCurrentGeneratedData(\n                        null,this.InvoicesStore.state.invoiceStatus\n                    );\n                }\n\n                this.tab = null;\n                this.uploadAttempts = 0;\n                this.BrStore.state.brUploadDialogOpen = false;\n            }\n        }\n    },\n\n    created() {\n\n    },\n\n    mounted() {\n        console.log(\"BRUpload component mounted\");\n        console.log('BATCHES:', this.batches);\n\n        // populate batches states\n        // for(let i=0; i < this.batches.length; i++) {\n        //     Vue.set(this.batchUploadStates, i, 'Ready for upload');\n        // }\n    },\n};\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-card\",\n    [\n      _c(\n        \"v-toolbar\",\n        { attrs: { elevation: \"0\" } },\n        [\n          _c(\n            \"v-toolbar-title\",\n            [\n              _c(\"v-icon\", { attrs: { color: \"primary\" } }, [\n                _vm._v(\"mdi-cloud-upload\")\n              ]),\n              _vm._v(\"\\n            BeatRoute Upload\\n        \")\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"v-spacer\"),\n          _vm._v(\" \"),\n          _c(\n            \"v-btn\",\n            {\n              staticClass: \"ml-2\",\n              attrs: {\n                color: \"primary\",\n                rounded: \"\",\n                dense: \"\",\n                depressed: \"\",\n                disabled:\n                  !_vm.batches.length ||\n                  _vm.stillUploading ||\n                  (!_vm.enableReupload && _vm.uploadAttempts > 0)\n              },\n              on: { click: _vm.upload }\n            },\n            [\n              _vm._v(\n                \"\\n            \" +\n                  _vm._s(\n                    _vm.enableReupload ? \"Reupload failed batch(es)\" : \"Upload\"\n                  ) +\n                  \"\\n        \"\n              )\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"v-btn\",\n            {\n              staticClass: \"ml-2\",\n              attrs: {\n                rounded: \"\",\n                dense: \"\",\n                depressed: \"\",\n                disabled: _vm.stillUploading\n              },\n              on: {\n                click: function($event) {\n                  $event.stopPropagation()\n                  return _vm.cancel.apply(null, arguments)\n                }\n              }\n            },\n            [_vm._v(\"\\n            Close\\n        \")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"v-card-text\",\n        { staticClass: \"pt-2\" },\n        [\n          _c(\n            \"v-row\",\n            [\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"12\", md: \"3\" } },\n                [\n                  _c(\n                    \"v-tabs\",\n                    {\n                      attrs: { vertical: \"\", grow: \"\" },\n                      model: {\n                        value: _vm.tab,\n                        callback: function($$v) {\n                          _vm.tab = $$v\n                        },\n                        expression: \"tab\"\n                      }\n                    },\n                    _vm._l(_vm.batches, function(b, i) {\n                      return _c(\"v-tab\", { key: i }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"px-2 font-weight-bold text-left\" },\n                          [\n                            _vm._v(\n                              \"\\n                            Batch \" +\n                                _vm._s(i + 1) +\n                                \" of \" +\n                                _vm._s(_vm.batches.length) +\n                                \"\\n                            \"\n                            ),\n                            _vm.batchUploadStates[i] == \"uploading\"\n                              ? _c(\"v-progress-circular\", {\n                                  attrs: {\n                                    indeterminate: \"\",\n                                    dark: \"\",\n                                    size: 20\n                                  }\n                                })\n                              : _vm.batchUploadStates[i] == \"success\"\n                              ? _c(\"v-icon\", { attrs: { color: \"success\" } }, [\n                                  _vm._v(\n                                    \"\\n                                mdi-check-circle\\n                            \"\n                                  )\n                                ])\n                              : _vm.batchUploadStates[i] == \"failed\"\n                              ? _c(\"v-icon\", { attrs: { color: \"error\" } }, [\n                                  _vm._v(\n                                    \"\\n                                mdi-alert\\n                            \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ])\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"12\", md: \"9\" } },\n                [\n                  _c(\n                    \"v-tabs-items\",\n                    {\n                      model: {\n                        value: _vm.tab,\n                        callback: function($$v) {\n                          _vm.tab = $$v\n                        },\n                        expression: \"tab\"\n                      }\n                    },\n                    _vm._l(_vm.batches, function(b, batchIndex) {\n                      return _c(\n                        \"v-tab-item\",\n                        { key: batchIndex },\n                        [\n                          _c(\n                            \"v-container\",\n                            { attrs: { fluid: \"\" } },\n                            [\n                              _c(\n                                \"v-expansion-panels\",\n                                { attrs: { focusable: \"\", multiple: \"\" } },\n                                _vm._l(b, function(invoice, i) {\n                                  return _c(\n                                    \"v-expansion-panel\",\n                                    { key: i },\n                                    [\n                                      _c(\"v-expansion-panel-header\", [\n                                        _c(\n                                          \"div\",\n                                          {\n                                            staticClass:\n                                              \"text-caption font-weight-boldx\",\n                                            class:\n                                              invoice.upload_status.success ==\n                                              true\n                                                ? \"primary--text\"\n                                                : invoice.upload_status\n                                                    .success == false\n                                                ? \"error--text\"\n                                                : \"\"\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                                            \" +\n                                                _vm._s(i + 1) +\n                                                \". Invoice \" +\n                                                _vm._s(\n                                                  invoice.erp_invoice_number\n                                                ) +\n                                                \"\\n                                            (\"\n                                            ),\n                                            _c(\"em\", [\n                                              _vm._v(\n                                                _vm._s(invoice.details.length) +\n                                                  \" item/s\"\n                                              )\n                                            ]),\n                                            _vm._v(\n                                              \")\\n\\n                                            \"\n                                            ),\n                                            invoice.upload_status.success ==\n                                            false\n                                              ? _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"font-weight-bold\"\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      \"\\n                                                | Error:\\n                                                \" +\n                                                        _vm._s(\n                                                          invoice.upload_status\n                                                            .message\n                                                        ) +\n                                                        \"\\n                                                (\" +\n                                                        _vm._s(\n                                                          invoice.upload_status\n                                                            .value\n                                                        ) +\n                                                        \")\\n                                            \"\n                                                    )\n                                                  ]\n                                                )\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            invoice.upload_status.success ==\n                                            true\n                                              ? _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"font-weight-bold\"\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      \"\\n                                                | \" +\n                                                        _vm._s(\n                                                          invoice.upload_status\n                                                            .message\n                                                        ) +\n                                                        \"\\n                                            \"\n                                                    )\n                                                  ]\n                                                )\n                                              : _vm._e()\n                                          ]\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"v-expansion-panel-content\",\n                                        { staticClass: \"pt-4\" },\n                                        [\n                                          _c(\n                                            \"div\",\n                                            { staticClass: \"d-flex pb-4\" },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                { staticClass: \"pr-4\" },\n                                                [\n                                                  _vm._v(\n                                                    \"\\n                                                Invoice #: \"\n                                                  ),\n                                                  _c(\"b\", [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        invoice.erp_invoice_number\n                                                      )\n                                                    )\n                                                  ])\n                                                ]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"div\",\n                                                { staticClass: \"pr-4\" },\n                                                [\n                                                  _vm._v(\"Customer: \"),\n                                                  _c(\"b\", [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        invoice.customer_name\n                                                      )\n                                                    )\n                                                  ])\n                                                ]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"div\",\n                                                { staticClass: \"pr-4\" },\n                                                [\n                                                  _vm._v(\"Amount: \"),\n                                                  _c(\"b\", [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        invoice.total_value.toFixed(\n                                                          4\n                                                        )\n                                                      )\n                                                    )\n                                                  ])\n                                                ]\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"div\",\n                                            [\n                                              _c(\"v-data-table\", {\n                                                attrs: {\n                                                  dense: \"\",\n                                                  headers: _vm.tblHeader,\n                                                  items: invoice.details\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key:\n                                                        \"item.price_per_item\",\n                                                      fn: function(ref) {\n                                                        var item = ref.item\n                                                        return [\n                                                          _c(\n                                                            \"div\",\n                                                            {\n                                                              staticClass:\n                                                                \"text-right\"\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"\\n                                                        \" +\n                                                                  _vm._s(\n                                                                    item.price_per_item\n                                                                  ) +\n                                                                  \"\\n                                                    \"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ]\n                                                      }\n                                                    },\n                                                    {\n                                                      key:\n                                                        \"item.discount_value\",\n                                                      fn: function(ref) {\n                                                        var item = ref.item\n                                                        return [\n                                                          _c(\n                                                            \"div\",\n                                                            {\n                                                              staticClass:\n                                                                \"text-right\"\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"\\n                                                        \" +\n                                                                  _vm._s(\n                                                                    item.discount_value.toFixed(\n                                                                      4\n                                                                    )\n                                                                  ) +\n                                                                  \"\\n                                                    \"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ]\n                                                      }\n                                                    },\n                                                    {\n                                                      key: \"item.gross_value\",\n                                                      fn: function(ref) {\n                                                        var item = ref.item\n                                                        return [\n                                                          _c(\n                                                            \"div\",\n                                                            {\n                                                              staticClass:\n                                                                \"text-right\"\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"\\n                                                        \" +\n                                                                  _vm._s(\n                                                                    item.gross_value.toFixed(\n                                                                      4\n                                                                    )\n                                                                  ) +\n                                                                  \"\\n                                                    \"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              })\n                                            ],\n                                            1\n                                          )\n                                        ]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                }),\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    }),\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BRUpload.vue?vue&type=template&id=c07a9e58&\"\nimport script from \"./BRUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./BRUpload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\DSGPM_DEV\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('c07a9e58')) {\n      api.createRecord('c07a9e58', component.options)\n    } else {\n      api.reload('c07a9e58', component.options)\n    }\n    module.hot.accept(\"./BRUpload.vue?vue&type=template&id=c07a9e58&\", function () {\n      api.rerender('c07a9e58', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/pages/Principals/common/BRUpload.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BRUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BRUpload.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BRUpload.vue?vue&type=template&id=c07a9e58&\""],"sourceRoot":""}